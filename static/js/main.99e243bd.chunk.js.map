{"version":3,"sources":["Components/Header/Search/index.jsx","Components/Header/index.jsx","Components/MovieCard/index.jsx","Components/MovieList/index.jsx","Model/Movie.js","API.js","index.js","Components/App/index.jsx"],"names":["Search","props","react_default","a","createElement","className","onSubmit","e","preventDefault","actorsChange","target","getElementsByClassName","value","type","onClick","orderChange","style","opacity","order","sortChange","sort","defaultProps","Header","MovieCard","backgroundImage","movie","posterurl","_props$movie","title","rating","year","description","concat","MovieList","useEffect","getMovies","lib_default","dataLength","movies","length","next","hasMore","loader","map","key","id","err","Movie","Object","classCallCheck","this","imdbRating","storyline","BASE_URL","request","startId","arguments","undefined","actors","url","fetch","then","result","json","res","render","_useState","useState","_useState2","slicedToArray","setOrder","_useState3","_useState4","setSort","_useState5","_useState6","setMovies","_useState7","_useState8","setErr","_useState9","_useState10","loadedPages","setLoadedPages","_useState11","_useState12","setHasMore","_useState13","_useState14","setActors","_getMovies","apply","asyncToGenerator","regenerator_default","mark","_callee","newActors","newSort","newOrder","newMovies","_args","wrap","_context","prev","sent","stop","document","getElementById"],"mappings":"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","file":"static/js/main.99e243bd.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./style.css\";\n\nexport default function Search(props) {\n  function sendActors(e) {\n    e.preventDefault();\n    props.actorsChange(\n      e.target.getElementsByClassName(\"input-actors\")[0].value\n    );\n  }\n\n  return (\n    <div className=\"search-wrapper\">\n      <form className=\"search-elem input-wrapper\" onSubmit={sendActors}>\n        <input type=\"text\" className=\"search-elem input-actors\" />\n        <button type=\"submit\" className=\"search-elem button-search\">\n          <i className=\"fas fa-search\" />\n        </button>\n      </form>\n      <button\n        type=\"button\"\n        className=\"search-elem button-order\"\n        onClick={props.orderChange}\n      >\n        <i\n          className=\"fas fa-long-arrow-alt-up\"\n          style={{ opacity: props.order === \"asc\" ? 1 : 0.2 }}\n        />\n        <i\n          className=\"fas fa-long-arrow-alt-down\"\n          style={{ opacity: props.order === \"desc\" ? 1 : 0.2 }}\n        />\n      </button>\n      <button\n        type=\"button\"\n        className=\"search-elem button-sort\"\n        onClick={props.sortChange}\n      >\n        <div style={{ opacity: props.sort === \"year\" ? 1 : 0.2 }}>Year</div>\n        <div style={{ opacity: props.sort === \"imdbRating\" ? 1 : 0.2 }}>\n          Rating\n        </div>\n      </button>\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  orderChange: PropTypes.func,\n  sortChange: PropTypes.func,\n  order: PropTypes.string,\n  sort: PropTypes.string,\n  actorsChange: PropTypes.func\n};\n\nSearch.defaultProps = {\n  orderChange: () => {},\n  sortChange: () => {},\n  order: \"\",\n  sort: \"\",\n  actorsChange: () => {}\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Search from \"./Search\";\n\nimport \"./style.css\";\n\nexport default function Header(props) {\n  return (\n    <header>\n      <h1 className=\"logo\">IMDb</h1>\n      <Search\n        orderChange={props.orderChange}\n        sortChange={props.sortChange}\n        order={props.order}\n        sort={props.sort}\n        actorsChange={props.actorsChange}\n      />\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  orderChange: PropTypes.func,\n  sortChange: PropTypes.func,\n  order: PropTypes.string,\n  sort: PropTypes.string,\n  actorsChange: PropTypes.func\n};\n\nHeader.defaultProps = {\n  orderChange: () => {},\n  sortChange: () => {},\n  order: \"\",\n  sort: \"\",\n  actorsChange: () => {}\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./style.css\";\n\nexport default function MovieCard(props) {\n  const backgroundImage = props.movie.posterurl;\n  const { title, rating, year, description } = props.movie;\n\n  return (\n    <div\n      className=\"MovieCard\"\n      style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <span className=\"movieRating\">{rating}</span>\n      <div className=\"cardFooter\">\n        <span className=\"movieTitle\">{title}</span>\n        <span className=\"movieYear\">{year}</span>\n        <p className=\"movieDescription\">{description}</p>\n      </div>\n    </div>\n  );\n}\nMovieCard.propTypes = {\n  movie: PropTypes.object\n};\n\nMovieCard.defaultProps = {\n  movie: {}\n};\n","/* eslint no-use-before-define: \"off\" */\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./style.css\";\n\nimport MovieCard from \"../MovieCard\";\n\nexport default function MovieList(props) {\n  useEffect(() => {\n    props.getMovies();\n  }, []);\n\n  function loadPage() {\n    props.getMovies();\n  }\n\n  return (\n    <InfiniteScroll\n      dataLength={props.movies.length}\n      next={loadPage}\n      hasMore={props.hasMore}\n      loader={<h1 className=\"info\">Данные загружаются...</h1>}\n    >\n      {props.movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <MovieCard movie={movie} />\n          </li>\n        );\n      })}\n      {props.err ? <h1 className=\"error\">Ошибка загрузки</h1> : \"\"}\n    </InfiniteScroll>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n  getMovies: PropTypes.func,\n  err: PropTypes.string,\n  hasMore: PropTypes.bool\n};\n\nMovieList.defaultProps = {\n  movies: [],\n  getMovies: () => {},\n  err: \"\",\n  hasMore: true\n};\n","export default class Movie {\n  constructor(movie) {\n    this.id = movie.id;\n    this.title = movie.title;\n    this.rating = movie.imdbRating;\n    this.year = movie.year;\n    this.posterurl = movie.posterurl;\n    this.description = movie.storyline;\n  }\n\n  id = null;\n\n  title = \"Unamed\";\n\n  rating = 0.0;\n\n  year = 0;\n\n  posterurl = null;\n\n  description = \"Description\";\n}\n","import Movie from \"./Model/Movie\";\n\nconst BASE_URL = \"http://dev.bittenred.com:61537/movies\";\n\nexport default function request(\n  startId = 0,\n  actors = \"\",\n  sort = \"\",\n  order = \"\"\n) {\n  const url = `${BASE_URL}?start=${startId}&actors=${actors}&sort=${sort}&order=${order}`;\n  return fetch(url)\n    .then(result => result.json()) // Dont understand why\n    .then(\n      res => {\n        return res.movies.map(movie => new Movie(movie));\n      },\n      () => {\n        return \"error\";\n      }\n    );\n}\n","/* eslint react/jsx-filename-extension: \"off\" */\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./Components/App\";\n\nrender(<App />, document.getElementById(\"root\"));\n","import React, { useState } from \"react\";\n\nimport \"./style.css\";\n\nimport Header from \"../Header\";\nimport MovieList from \"../MovieList\";\n\nimport request from \"../../API\";\n\nexport default function App() {\n  const [order, setOrder] = useState(\"asc\");\n  const [sort, setSort] = useState(\"imdbRating\");\n  const [movies, setMovies] = useState([]);\n  const [err, setErr] = useState(null);\n  const [loadedPages, setLoadedPages] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [actors, setActors] = useState(\"\");\n\n  async function getMovies(\n    startId = loadedPages * 30,\n    newActors = actors,\n    newSort = sort,\n    newOrder = order\n  ) {\n    const newMovies = await request(startId, newActors, newSort, newOrder);\n\n    if (newMovies !== \"error\") {\n      if (startId === 0) {\n        setOrder(newOrder);\n        setSort(newSort);\n        setActors(newActors);\n        setMovies(newMovies);\n        setLoadedPages(1);\n      } else {\n        setMovies(movies.concat(newMovies));\n        setLoadedPages(loadedPages + 1);\n      }\n    } else {\n      setErr(newMovies);\n    }\n\n    if (newMovies.length === 0) {\n      setHasMore(false);\n    }\n  }\n\n  function actorsChange(newActors) {\n    getMovies(0, newActors);\n  }\n\n  function orderChange() {\n    getMovies(0, \"\", sort, order === \"asc\" ? \"desc\" : \"asc\");\n  }\n\n  function sortChange() {\n    getMovies(0, \"\", sort === \"imdbRating\" ? \"year\" : \"imdbRating\", order);\n  }\n\n  return (\n    <div>\n      <Header\n        orderChange={orderChange}\n        sortChange={sortChange}\n        order={order}\n        sort={sort}\n        actorsChange={actorsChange}\n      />\n      <MovieList\n        movies={movies}\n        getMovies={getMovies}\n        err={err}\n        hasMore={hasMore}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}