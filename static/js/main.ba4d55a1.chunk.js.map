{"version":3,"sources":["Components/LevelCreater/RoundCreater/index.jsx","Components/LevelCreater/index.jsx","defaultLevels.js","Components/Header/index.jsx","Components/LevelCard/index.jsx","Components/LevelsList/index.jsx","Components/Pages/PageMain/index.jsx","Components/LevelHeader/index.jsx","Components/RoundWindow/index.jsx","funcs.js","Components/Pages/PageLevel/index.jsx","Components/App/index.jsx","index.js"],"names":["RoundCreater","props","questionHref","React","createRef","answerHrefs","react_default","a","createElement","className","type","placeholder","value","question","onChange","changeQuestion","roundId","current","ref","answer","map","id","push","key","concat","answerId","text","changeAnswer","onClick","e","preventDefault","addAnswer","LevelCreater","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addRound","setState","oldState","rounds","length","round","changeTitle","title","titleRef","changeDescription","description","descriptionRef","rId","newRounds","slice","ans","ansId","create","newLevel","name","state","addLevel","_this2","levelCreaterToggle","action","Component","defaultLevels","Header","LevelCard","deleteSelf","deleteCard","startLevel","target","LevelsList","levels","elem","LevelCard_LevelCard","PageMain","cardId","filter","levelCreater","Header_Header","LevelCreater_LevelCreater","LevelHeader","exp","score","levelName","style","width","RoundWindow","roundClear","buttonActive","document","getElementsByClassName","checkAnswer","getAnswer","replace","trim","toLowerCase","find","el","changeScore","goNextRound","alert","result","console","log","buttonText","buttonClassName","onSubmit","randomInteger","min","max","rand","Math","random","PageLevel","selectedNow","roundsCompleted","nextRoundId","indexOf","roundSelected","changes","setTimeout","exitLevel","goPage","roundText","roundAnswer","LevelHeader_LevelHeader","RoundWindow_RoundWindow","App","levelData","newPage","PageLevel_PageLevel","page","selectedPage","PageMain_PageMain","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.ba4d55a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default function RoundCreater(props) {\r\n    let questionHref = React.createRef();\r\n    let answerHrefs = [];\r\n\r\n    function addAnswer(e) {\r\n        e.preventDefault();\r\n        props.addAnswer(props.roundId);\r\n    }\r\n\r\n    function changeQuestion() {\r\n        props.changeQuestion(props.roundId, questionHref.current.value);\r\n    }\r\n    function changeAnswer(answerId) {\r\n        const text = answerHrefs[answerId].current.value;\r\n        props.changeAnswer(props.roundId, answerId, text);\r\n    }\r\n\r\n    return(\r\n        <div className=\"create-round-wrapper\">\r\n            <input\r\n                className='create-round__input'\r\n                type=\"text\"\r\n                placeholder=\"Вопрос\"\r\n                value={props.question}\r\n                onChange={changeQuestion}\r\n                ref={questionHref}\r\n            />\r\n            {\r\n                props.answer.map((answer,id) => {\r\n                    answerHrefs.push(React.createRef());\r\n                    return(\r\n                            <input\r\n                                className='create-round__input'\r\n                                key={`${props.roundId}-${id}`}\r\n                                type=\"text\"\r\n                                placeholder={`Ответ №${id+1}`}\r\n                                value={answer}\r\n                                onChange={()=>changeAnswer(id)}\r\n                                ref={answerHrefs[id]}\r\n                            />\r\n                        )\r\n                })\r\n            }\r\n            <button className=\"create-round__add-btn\" onClick={addAnswer}><i className=\"far fa-plus-square\"></i></button>\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport RoundCreater from \"./RoundCreater\";\r\n\r\nimport './style.css';\r\n\r\nexport default class LevelCreater extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title:'',\r\n            description:'',\r\n            rounds: [\r\n                {\r\n                    id: 1,\r\n                    text: '',\r\n                    answer: ['']\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n    }\r\n\r\n    addRound = (e) => {\r\n        e.preventDefault();\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.concat([{\r\n                    id: oldState.rounds.length+1,\r\n                    text: '',\r\n                    answer: ['']\r\n                }])\r\n            }\r\n        })\r\n    };\r\n\r\n    addAnswer = (roundId) => {\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.map((round,id) => {\r\n                    if (id === roundId){\r\n                        round.answer.push('');\r\n                    }\r\n                    return round\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    changeTitle = () => {\r\n        this.setState({\r\n            title: this.titleRef.current.value\r\n        })\r\n    };\r\n    changeDescription = () => {\r\n        this.setState({\r\n            description: this.descriptionRef.current.value\r\n        })\r\n    };\r\n\r\n    changeQuestion = (roundId, text) => {\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.map((round,rId) => {\r\n                    if (rId === roundId) {\r\n                        round.text = text\r\n                    }\r\n                    return round;\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    changeAnswer = (roundId, answerId, text) => {\r\n        this.setState(oldState => {\r\n            let newRounds = oldState.rounds.slice();\r\n\r\n            newRounds = newRounds.map((round,rId) => {\r\n                if (rId === roundId) {\r\n                    round.answer = round.answer.map((ans, ansId) => {\r\n                        if (ansId === answerId) {\r\n                            return text;\r\n                        } else {\r\n                            return ans;\r\n                        }\r\n                    });\r\n                }\r\n                return round;\r\n            });\r\n\r\n            return {\r\n                rounds: newRounds.slice()\r\n            }\r\n        })\r\n    };\r\n\r\n    create = (e) => {\r\n        e.preventDefault();\r\n        let newLevel = {\r\n            id: 'none',\r\n            name: this.state.title || 'MyLevel',\r\n            description: this.state.description,\r\n            rounds: this.state.rounds\r\n        };\r\n        this.props.addLevel(newLevel);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"create-window\">\r\n                <button onClick={this.props.levelCreaterToggle} className='level-creater__exit-btn' ><i className=\"far fa-times-circle\"></i></button>\r\n                <form action=\"#\" className=\"create-form\">\r\n                    <div className='level-create__head'>\r\n                        <input\r\n                            className='level-creat__title'\r\n                            ref={this.titleRef}\r\n                            type=\"text\"\r\n                            value={this.state.title}\r\n                            placeholder='Название'\r\n                            onChange={this.changeTitle}\r\n                        />\r\n                        <input\r\n                            className='level-creat__description'\r\n                            ref={this.descriptionRef}\r\n                            type=\"text\"\r\n                            value={this.state.description}\r\n                            placeholder='Описание'\r\n                            onChange={this.changeDescription}\r\n                        />\r\n\r\n                    </div>\r\n                    {\r\n                        this.state.rounds.map((round,id) => (\r\n                                <RoundCreater\r\n                                    key={id}\r\n                                    roundId={id}\r\n                                    question={round.text}\r\n                                    answer={round.answer}\r\n                                    addAnswer={this.addAnswer}\r\n                                    changeQuestion={this.changeQuestion}\r\n                                    changeAnswer={this.changeAnswer}\r\n                                />\r\n                        ))\r\n                    }\r\n                </form>\r\n                <button className=\"create-round__add-btn create-round__add-round-btn\" onClick={this.addRound}><i className=\"far fa-plus-square\"></i></button>\r\n                <button className=\"create-window__create-button\" onClick={this.create}>Создать</button>\r\n            </div>\r\n        )\r\n    }\r\n}","const defaultLevels = [\r\n    {\r\n        id: 1,\r\n        name: \"Colors\",\r\n        description: \"Демо уровень с цветами для демонстрации\",\r\n        rounds: [\r\n            {\r\n                id: 1,\r\n                text: 'black',\r\n                answer: ['черный', 'чёрный']\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'white',\r\n                answer: ['белый']\r\n            },\r\n            {\r\n                id: 3,\r\n                text: 'green',\r\n                answer: ['зеленый']\r\n            },\r\n            {\r\n                id: 4,\r\n                text: 'pink',\r\n                answer: ['розовый']\r\n            },\r\n            {\r\n                id: 5,\r\n                text: 'yellow',\r\n                answer: ['желтый']\r\n            },\r\n            {\r\n                id: 6,\r\n                text: 'brown',\r\n                answer: ['коричневый']\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Animals\",\r\n        description: \"Демо уровень с животными для демонстрации\",\r\n        rounds: [\r\n            {\r\n                id: 1,\r\n                text: 'Cat',\r\n                answer: ['кот', 'кошка']\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'chicken',\r\n                answer: ['курица']\r\n            },\r\n            {\r\n                id: 3,\r\n                text: 'crab',\r\n                answer: ['краб']\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"level number three\",\r\n        description: \"description of level №3\",\r\n        rounds: [\r\n            {\r\n                id: 1,\r\n                text: 'Text of first round',\r\n                answer: ['answer answer']\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'Text of second round',\r\n                answer: ['answer']\r\n            }\r\n        ]\r\n    },\r\n\r\n];\r\n\r\nexport default defaultLevels;","import React, {Component} from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1 className={\"logoMain\"}><span>local</span>EnLearning</h1>\r\n            </header>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\n\r\nexport default class LevelCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    deleteSelf = () => {\r\n        this.props.deleteCard(this.props.id)\r\n    };\r\n\r\n    startLevel = (e) => {\r\n        if(e.target.className === \"fas fa-trash-alt\"){\r\n            return this.deleteSelf();\r\n        }\r\n        this.props.startLevel({\r\n            name: this.props.name,\r\n            rounds: this.props.rounds\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className={\"LevelCard\"} onClick={this.startLevel}>\r\n                <div className='LevelCard__play'>\r\n                    <i className=\"fas fa-play\"></i>\r\n                </div>\r\n                <h2 className={\"LevelCard__name\"}>{this.props.name}</h2>\r\n                <p className={\"LevelCard__description\"}>{this.props.description}</p>\r\n                <i\r\n                    className={\"fas fa-trash-alt\"}\r\n                    onClick={this.deleteSelf}\r\n                />\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nLevelCard.propTypes = {\r\n    name: PropTypes.string,\r\n    description: PropTypes.string,\r\n    rounds: PropTypes.array,\r\n    startLevel: PropTypes.func,\r\n    id: PropTypes.number,\r\n    deleteCard: PropTypes.func\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './style.css';\r\n\r\nimport LevelCard from \"../LevelCard\";\r\n\r\nexport default function LevelsList (props) {\r\n    const getListElements = arr => (arr.map(elem => (\r\n                <LevelCard\r\n                    key={elem.id}\r\n                    id={elem.id}\r\n                    name={elem.name}\r\n                    description={elem.description}\r\n                    rounds={elem.rounds}\r\n                    startLevel={props.startLevel}\r\n                    deleteCard={props.deleteCard}\r\n                />\r\n                )));\r\n\r\n    return (\r\n        <ul className={\"LevelsList\"}>\r\n            {getListElements(props.levels)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nLevelsList.propTypes = {\r\n    startLevel: PropTypes.func\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LevelCreater from \"../../LevelCreater\";\r\n\r\nimport './style.css';\r\n\r\nimport defaultLevels from '../../../defaultLevels';\r\n\r\nimport Header from  \"../../Header\";\r\nimport LevelsList from \"../../LevelsList\";\r\n\r\nexport default class PageMain extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            levels: [],\r\n            levelCreater: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({levels: defaultLevels});\r\n    }\r\n\r\n    deleteCard = (cardId) => {\r\n        this.setState(oldState => ({\r\n                levels: oldState.levels.filter(elem => elem.id !== cardId)\r\n        }))\r\n    };\r\n\r\n    levelCreaterToggle = () => {\r\n        this.setState(oldState => ({levelCreater: (!oldState.levelCreater)}));\r\n    };\r\n\r\n    addLevel = (newLevel) => {\r\n            this.setState(oldState=>{\r\n                newLevel.id = oldState.levels.length+1;\r\n                oldState.levels.push(newLevel);\r\n                return({levels: oldState.levels, levelCreater: false});\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"PageMain\"}>\r\n                <Header/>\r\n                <main>\r\n                    <LevelsList\r\n                        levels={this.state.levels}\r\n                        startLevel={this.props.startLevel}\r\n                        deleteCard={this.deleteCard}\r\n                    />\r\n                    <button\r\n                        className='levels-list__add-btn'\r\n                        onClick={this.levelCreaterToggle}\r\n                    >\r\n                        <i className=\"far fa-plus-square\"></i>\r\n                    </button>\r\n                </main>\r\n                {(this.state.levelCreater)?<LevelCreater levelCreaterToggle={this.levelCreaterToggle} addLevel={this.addLevel} />:''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPageMain.propTypes = {\r\n    startLevel: PropTypes.func\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\n\r\nexport default class LevelHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            exp: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const score = this.props.score;\r\n\r\n        return (\r\n            <header>\r\n                <h1>{this.props.levelName}</h1>\r\n                <h1 className={\"header__score\"}>{`Score: ${score}`}</h1>\r\n                <div className=\"score-bar\"><div className=\"score-bar__fill\" style={{\"width\":`${score * 10}%`}}></div></div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nLevelHeader.propTypes = {\r\n    score: PropTypes.number\r\n};","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./style.css\";\r\n\r\nexport default class RoundWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            result: \"await\", //--[true/false/await]--//\r\n            buttonActive: false\r\n        };\r\n    }\r\n\r\n\r\n\r\n    roundClear = () => {\r\n        this.setState({\r\n            buttonActive: false\r\n        });\r\n        document.getElementsByClassName(\"RoundWindow__input\")[0]\r\n            .value = '';\r\n    };\r\n\r\n    checkAnswer = (e) => {\r\n        e.preventDefault();\r\n        let answer = this.getAnswer().value.replace(/\\s{2,}/g, ' ').trim().toLowerCase();\r\n\r\n        if (this.props.answer.find( (el) => (el === answer) )) {\r\n            this.props.changeScore(1);\r\n            this.props.goNextRound(this.props.roundId);\r\n            this.roundClear();\r\n        } else {\r\n            alert(\"Неправильно!\");\r\n            this.props.changeScore(-1);\r\n            this.roundClear();\r\n        }\r\n    };\r\n\r\n    getAnswer = () => {\r\n        return document.getElementsByClassName(\"RoundWindow__input\")[0];\r\n    };\r\n\r\n    buttonActive = () => {\r\n        if (this.getAnswer().value){\r\n            this.setState({\r\n                buttonActive: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                buttonActive: false\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props.answer);\r\n\r\n        const text = this.props.text;\r\n        const buttonText = (this.state.buttonActive)? \"Проверить\": \"Пропустить\";\r\n        const buttonClassName = (this.state.buttonActive)?\r\n            \"RoundWindow__button RoundWindow__button_action\":\r\n            \"RoundWindow__button\";\r\n\r\n        return (\r\n            <div className={\"RoundWindow\"}>\r\n                <p className={\"RoundWindow__text\"} >{text}</p>\r\n                <form action=\"#\" onSubmit={this.checkAnswer}>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={\"RoundWindow__input\"}\r\n                        onChange={this.buttonActive}\r\n                    />\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={buttonText}\r\n                        className={buttonClassName}\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRoundWindow.propTypes = {\r\n    text: PropTypes.string,\r\n    answer: PropTypes.array,\r\n    roundId: PropTypes.number,\r\n    goNextRound: PropTypes.func,\r\n    changeScore: PropTypes.func\r\n};","export default function randomInteger(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    rand = Math.round(rand);\r\n    return rand;\r\n}\r\n\r\n//-----cookies\r\n\r\n//export default function setCookie(name, value)\r\n//export default function deleteCookie(name)","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\nimport LevelHeader from \"../../LevelHeader\";\r\nimport RoundWindow from \"../../RoundWindow\";\r\nimport randomInteger from \"../../../funcs\";\r\n\r\nexport default class PageLevel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            roundSelected: 1,\r\n            roundsCompleted: [],\r\n            score: 0\r\n        }\r\n    }\r\n\r\n    goNextRound = (selectedNow) => {\r\n        if (this.state.roundsCompleted.length === this.props.rounds.length-2) {\r\n            this.setState({roundsCompleted: []});\r\n        }\r\n\r\n        let nextRoundId = randomInteger(1, this.props.rounds.length);\r\n        while(this.state.roundsCompleted.indexOf(nextRoundId) !== -1 || nextRoundId === selectedNow){\r\n            nextRoundId = randomInteger(1, this.props.rounds.length)\r\n        }\r\n\r\n        this.setState((oldState)=>{\r\n            return {\r\n                roundSelected: nextRoundId,\r\n                roundsCompleted: oldState.roundsCompleted.concat(selectedNow)\r\n            }\r\n        });\r\n        console.log(this.state.roundsCompleted);\r\n    };\r\n\r\n    changeScore = (changes) => {\r\n        if (changes < 0){\r\n            if (this.state.score === 0) {\r\n                return\r\n            }\r\n        } else if (this.state.score >= 9) {\r\n            setTimeout(this.exitLevel, 1000);\r\n\r\n        }\r\n\r\n        this.setState((state) => {\r\n            return{score: state.score + changes}\r\n        });\r\n    };\r\n\r\n    exitLevel = () => {\r\n        this.props.goPage(\"PageMain\");\r\n    };\r\n\r\n    render() {\r\n        const score = this.state.score;\r\n        let round = this.props.rounds.find((round) => (\r\n            round.id === this.state.roundSelected)\r\n        );\r\n        const roundText = round.text;\r\n        const roundAnswer = round.answer;\r\n        const roundId = round.id;\r\n\r\n\r\n\r\n        return (\r\n            <div className={\"PageLevel\"}>\r\n                <LevelHeader levelName={this.props.name} score={score}/>\r\n                <div>\r\n                    <RoundWindow\r\n                        text={roundText}\r\n                        answer={roundAnswer}\r\n                        roundId={roundId}\r\n                        goNextRound={this.goNextRound}\r\n                        changeScore={this.changeScore}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPageLevel.propTypes = {\r\n    name: PropTypes.string,\r\n    rounds: PropTypes.array,\r\n    goPage: PropTypes.func\r\n};","import React, {Component} from 'react';\r\n\r\nimport './style.css';\r\n\r\nimport PageMain from \"../Pages/PageMain\";\r\nimport PageLevel from \"../Pages/PageLevel\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedPage: <PageMain startLevel={this.startLevel} />\r\n        }\r\n    }\r\n\r\n    startLevel = (levelData) => {\r\n        let newPage = <PageLevel\r\n            name={levelData.name}\r\n            rounds={levelData.rounds}\r\n            goPage={this.goPage}\r\n        />;\r\n\r\n        this.goPage(newPage);\r\n    };\r\n\r\n    goPage = (page) => {\r\n        this.setState({selectedPage: page});\r\n    };\r\n\r\n    render() {\r\n        return this.state.selectedPage\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}