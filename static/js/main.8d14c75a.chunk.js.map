{"version":3,"sources":["Components/Header/Eni-min.svg","Components/LevelCreater/RoundCreater/index.jsx","Components/LevelCreater/index.jsx","defaultLevels.js","Components/Header/index.jsx","Components/LevelCard/index.jsx","Components/LevelsList/index.jsx","Components/RightBar/index.js","funcs.js","Components/Pages/PageMain/index.jsx","Components/LevelHeader/index.jsx","Components/RoundWindow/index.jsx","Components/Pages/PageLevel/index.jsx","Components/App/index.jsx","index.js"],"names":["module","exports","__webpack_require__","p","RoundCreater","props","questionHref","React","createRef","answerHrefs","react_default","a","createElement","className","type","placeholder","value","question","onChange","changeQuestion","roundId","current","ref","answer","map","id","push","key","concat","answerId","text","toLowerCase","changeAnswer","onClick","e","preventDefault","addAnswer","LevelCreater","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addRound","setState","oldState","rounds","length","round","changeTitle","title","titleRef","changeDescription","description","descriptionRef","rId","newRounds","slice","ans","ansId","create","state","alert","newLevel","name","addLevel","_this2","levelCreaterToggle","action","Component","defaultLevels","Header","src","require","alt","LevelCard","deleteSelf","deleteCard","target","startLevel","LevelsList","levels","elem","RightBar","randomInteger","min","max","rand","Math","random","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","date","Date","setDate","getDate","toUTCString","PageMain","console","log","JSON","stringify","_useState","useState","parse","_useState2","slicedToArray","setLevels","_useState3","_useState4","levelCreater","setLevelCreater","Header_Header","cardId","newLevels","filter","aria-label","LevelCreater_LevelCreater","LevelHeader","exp","score","levelName","style","width","RoundWindow","roundClear","buttonActive","getElementsByClassName","checkAnswer","getAnswer","trim","find","el","changeScore","exitMode","show","result","buttonText","buttonClassName","Transition","in","timeout","onExited","setTimeout","goNextRound","animationClassName","onSubmit","PageLevel","selectedNow","roundsCompleted","nextRoundId","indexOf","roundSelected","changes","exitLevel","endLevel","roundText","roundAnswer","LevelHeader_LevelHeader","RoundWindow_RoundWindow","App","goPage","pageMain","levelData","newPage","PageLevel_PageLevel","page","selectedPage","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.8d14c75a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Eni-min.95eae398.svg\";","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default function RoundCreater(props) {\r\n    let questionHref = React.createRef();\r\n    let answerHrefs = [];\r\n\r\n    function addAnswer(e) {\r\n        e.preventDefault();\r\n        props.addAnswer(props.roundId);\r\n    }\r\n\r\n    function changeQuestion() {\r\n        props.changeQuestion(props.roundId, questionHref.current.value);\r\n    }\r\n    function changeAnswer(answerId) {\r\n        const text = answerHrefs[answerId].current.value.toLowerCase();\r\n        props.changeAnswer(props.roundId, answerId, text);\r\n    }\r\n\r\n    return(\r\n        <div className=\"create-round-wrapper\">\r\n            <input\r\n                className='create-round__input'\r\n                type=\"text\"\r\n                placeholder=\"Вопрос\"\r\n                value={props.question}\r\n                onChange={changeQuestion}\r\n                ref={questionHref}\r\n            />\r\n            {\r\n                props.answer.map((answer,id) => {\r\n                    answerHrefs.push(React.createRef());\r\n                    return(\r\n                            <input\r\n                                className='create-round__input'\r\n                                key={`${props.roundId}-${id}`}\r\n                                type=\"text\"\r\n                                placeholder={`Ответ №${id+1}`}\r\n                                value={answer}\r\n                                onChange={()=>changeAnswer(id)}\r\n                                ref={answerHrefs[id]}\r\n                            />\r\n                        )\r\n                })\r\n            }\r\n            <button className=\"create-round__add-btn\" onClick={addAnswer}><i className=\"far fa-plus-square\"></i></button>\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport RoundCreater from \"./RoundCreater\";\r\n\r\nimport './style.css';\r\n\r\nexport default class LevelCreater extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title:'',\r\n            description:'',\r\n            rounds: [\r\n                {\r\n                    id: 1,\r\n                    text: '',\r\n                    answer: ['']\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n    }\r\n\r\n    addRound = (e) => {\r\n        e.preventDefault();\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.concat([{\r\n                    id: oldState.rounds.length+1,\r\n                    text: '',\r\n                    answer: ['']\r\n                }])\r\n            }\r\n        })\r\n    };\r\n\r\n    addAnswer = (roundId) => {\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.map((round,id) => {\r\n                    if (id === roundId){\r\n                        round.answer.push('');\r\n                    }\r\n                    return round\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    changeTitle = () => {\r\n        this.setState({\r\n            title: this.titleRef.current.value\r\n        })\r\n    };\r\n    changeDescription = () => {\r\n        this.setState({\r\n            description: this.descriptionRef.current.value\r\n        })\r\n    };\r\n\r\n    changeQuestion = (roundId, text) => {\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.map((round,rId) => {\r\n                    if (rId === roundId) {\r\n                        round.text = text\r\n                    }\r\n                    return round;\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    changeAnswer = (roundId, answerId, text) => {\r\n        this.setState(oldState => {\r\n            let newRounds = oldState.rounds.slice();\r\n\r\n            newRounds = newRounds.map((round,rId) => {\r\n                if (rId === roundId) {\r\n                    round.answer = round.answer.map((ans, ansId) => {\r\n                        if (ansId === answerId) {\r\n                            return text;\r\n                        } else {\r\n                            return ans;\r\n                        }\r\n                    });\r\n                }\r\n                return round;\r\n            });\r\n\r\n            return {\r\n                rounds: newRounds.slice()\r\n            }\r\n        })\r\n    };\r\n\r\n    create = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.rounds.length <= 2)\r\n            return alert('В уровне должно быть больше двух раундов');\r\n        let newLevel = {\r\n            id: 'none',\r\n            name: this.state.title || 'MyLevel',\r\n            description: this.state.description,\r\n            rounds: this.state.rounds\r\n        };\r\n        this.props.addLevel(newLevel);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"create-window\">\r\n                <button onClick={this.props.levelCreaterToggle} className='level-creater__exit-btn' ><i className=\"far fa-times-circle\"></i></button>\r\n                <form action=\"#\" className=\"create-form\">\r\n                    <div className='level-create__head'>\r\n                        <input\r\n                            className='level-creat__title'\r\n                            ref={this.titleRef}\r\n                            type=\"text\"\r\n                            value={this.state.title}\r\n                            placeholder='Название'\r\n                            onChange={this.changeTitle}\r\n                        />\r\n                        <input\r\n                            className='level-creat__description'\r\n                            ref={this.descriptionRef}\r\n                            type=\"text\"\r\n                            value={this.state.description}\r\n                            placeholder='Описание'\r\n                            onChange={this.changeDescription}\r\n                        />\r\n\r\n                    </div>\r\n                    {\r\n                        this.state.rounds.map((round,id) => (\r\n                                <RoundCreater\r\n                                    key={id}\r\n                                    roundId={id}\r\n                                    question={round.text}\r\n                                    answer={round.answer}\r\n                                    addAnswer={this.addAnswer}\r\n                                    changeQuestion={this.changeQuestion}\r\n                                    changeAnswer={this.changeAnswer}\r\n                                />\r\n                        ))\r\n                    }\r\n                </form>\r\n                <button className=\"create-round__add-btn create-round__add-round-btn\" onClick={this.addRound}><i className=\"far fa-plus-square\"></i></button>\r\n                <button className=\"create-window__create-button\" onClick={this.create}>Создать</button>\r\n            </div>\r\n        )\r\n    }\r\n}","const defaultLevels = [\r\n    {\r\n        id: 1,\r\n        name: \"Colors\",\r\n        description: \"Демо уровень с цветами\",\r\n        rounds: [\r\n            {\r\n                id: 1,\r\n                text: 'black',\r\n                answer: ['черный', 'чёрный']\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'white',\r\n                answer: ['белый']\r\n            },\r\n            {\r\n                id: 3,\r\n                text: 'green',\r\n                answer: ['зеленый']\r\n            },\r\n            {\r\n                id: 4,\r\n                text: 'pink',\r\n                answer: ['розовый']\r\n            },\r\n            {\r\n                id: 5,\r\n                text: 'yellow',\r\n                answer: ['желтый']\r\n            },\r\n            {\r\n                id: 6,\r\n                text: 'brown',\r\n                answer: ['коричневый']\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Animals\",\r\n        description: \"Демо уровень с животными\",\r\n        rounds: [\r\n            {\r\n                id: 1,\r\n                text: 'Cat',\r\n                answer: ['кот', 'кошка']\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'chicken',\r\n                answer: ['курица']\r\n            },\r\n            {\r\n                id: 3,\r\n                text: 'crab',\r\n                answer: ['краб']\r\n            }\r\n        ]\r\n    }\r\n\r\n];\r\n\r\nexport default defaultLevels;","import React, {Component} from 'react';\r\n\r\nimport './style.css';\r\n// import logo from '../../../public/Eni-min.png';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header-main\" >\r\n                <img className=\"eni_logo\" src={require('./Eni-min.svg')} alt=\"\"/>\r\n                <h1 className={\"logoMain\"}><span>local</span>EnLearning</h1>\r\n            </header>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\n\r\nexport default function LevelCard (props){\r\n    const deleteSelf = () => {\r\n        props.deleteCard(props.id)\r\n    };\r\n\r\n    const startLevel = (e) => {\r\n        if(e.target.className === \"fas fa-trash-alt delete-icon\"){ // fix\r\n            return deleteSelf();\r\n        }\r\n        props.startLevel({\r\n            name: props.name,\r\n            rounds: props.rounds\r\n        });\r\n    };\r\n\r\n    return (\r\n        <li className={\"LevelCard\"} onClick={startLevel}>\r\n            <div className='LevelCard__play'>\r\n                <i className=\"fas fa-play\"></i>\r\n            </div>\r\n            <h2 className={\"LevelCard__name\"}>{props.name}</h2>\r\n            <p className={\"LevelCard__description\"}>{props.description}</p>\r\n            <i\r\n                className=\"fas fa-trash-alt delete-icon\"\r\n                onClick={deleteSelf}\r\n            />\r\n        </li>\r\n    )\r\n}\r\n\r\nLevelCard.propTypes = {\r\n    name: PropTypes.string,\r\n    description: PropTypes.string,\r\n    rounds: PropTypes.array,\r\n    startLevel: PropTypes.func,\r\n    id: PropTypes.number,\r\n    deleteCard: PropTypes.func\r\n};\r\n\r\n//start change","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './style.css';\r\n\r\nimport LevelCard from \"../LevelCard\";\r\n\r\nexport default function LevelsList (props) {\r\n    const getListElements = arr => (arr.map(elem => (\r\n                <LevelCard\r\n                    key={elem.id}\r\n                    id={elem.id}\r\n                    name={elem.name}\r\n                    description={elem.description}\r\n                    rounds={elem.rounds}\r\n                    startLevel={props.startLevel}\r\n                    deleteCard={props.deleteCard}\r\n                />\r\n                )));\r\n\r\n    return (\r\n        <ul className={\"LevelsList\"}>\r\n            {getListElements(props.levels)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nLevelsList.propTypes = {\r\n    startLevel: PropTypes.func\r\n};","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default function RightBar (props) {\r\n\r\n    return (\r\n        <article className=\"right-bar\" >\r\n            <h2>Статистика последнего теста</h2>\r\n        </article>\r\n    )\r\n}","function randomInteger(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    rand = Math.round(rand);\r\n    return rand;\r\n}\r\n\r\n//-----cookies\r\n// возвращает cookie с именем name, если есть, если нет, то undefined\r\nfunction getCookie(name) {\r\n    var matches = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nfunction setCookie(cookie, value) {\r\n    let date = new Date;\r\n    date.setDate(date.getDate() + 365);\r\n    date = date.toUTCString();\r\n    document.cookie = `${cookie}=${value};path=/;expires=${date}`;\r\n}\r\n\r\nfunction deleteCookie(cookie) {\r\n    let date = new Date(0).toUTCString();\r\n    document.cookie = `${cookie}=;path=/;expires=${date}`\r\n}\r\n\r\n\r\n//export default function setCookie(name, value)\r\n//export default function deleteCookie(name)\r\n\r\nexport { randomInteger, getCookie, setCookie, deleteCookie }","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LevelCreater from \"../../LevelCreater\";\r\n\r\nimport './style.css';\r\n\r\nimport defaultLevels from '../../../defaultLevels';\r\n\r\nimport Header from  \"../../Header\";\r\nimport LevelsList from \"../../LevelsList\";\r\nimport RightBar from \"../../RightBar\";\r\n\r\nimport {getCookie, setCookie} from \"../../../funcs\";\r\n\r\n\r\nexport default function PageMain (props) {\r\n    if (!getCookie('levels')) {\r\n        console.log('Сохраненных уровней нет. Установка уровней по умолчанию');\r\n        setCookie('levels', JSON.stringify(defaultLevels));\r\n    }\r\n\r\n    const [levels, setLevels] = useState(JSON.parse(getCookie('levels')));\r\n    const [levelCreater, setLevelCreater] = useState(false);\r\n\r\n    const deleteCard = (cardId) => {\r\n        let newLevels = levels.filter(elem => elem.id !== cardId);\r\n        setCookie('levels', JSON.stringify(newLevels));\r\n        setLevels(newLevels);\r\n    };\r\n\r\n    const levelCreaterToggle = () => {\r\n        setLevelCreater(!levelCreater);\r\n    };\r\n\r\n    const addLevel = (newLevel) => {\r\n        newLevel.id = levels.length+1;\r\n        let newLevels = levels.slice();\r\n        newLevels.push(newLevel);\r\n        setCookie('levels', JSON.stringify(newLevels));\r\n        setLevels(newLevels);\r\n        setLevelCreater(false);\r\n     };\r\n\r\n    return (\r\n        <div className={\"PageMain\"}>\r\n             <Header/>\r\n             <div className=\"PageMain__content\">\r\n                 <main>\r\n                     <LevelsList\r\n                         levels={levels}\r\n                         startLevel={props.startLevel}\r\n                         deleteCard={deleteCard}\r\n                     />\r\n                     <button\r\n                         className='levels-list__add-btn hint--right'\r\n                         aria-label='Создать новый тест'\r\n                         onClick={levelCreaterToggle}\r\n                     >\r\n                         <i className=\"far fa-plus-square\"></i>\r\n                     </button>\r\n                 </main>\r\n                 <RightBar/>\r\n             </div>\r\n            {(levelCreater)?<LevelCreater levelCreaterToggle={levelCreaterToggle} addLevel={addLevel} />:''}\r\n         </div>\r\n    )\r\n}\r\n\r\n\r\n// export default class PageMain extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//\r\n//         if (!getCookie('levels')) {\r\n//             console.log('Сохраненных уровней нет. Установка уровней по умолчанию');\r\n//             setCookie('levels', JSON.stringify(defaultLevels));\r\n//         }\r\n//\r\n//         this.state = {\r\n//             levels: JSON.parse(getCookie('levels')),\r\n//             levelCreater: false\r\n//         };\r\n//\r\n//     }\r\n//\r\n//     deleteCard = (cardId) => {\r\n//         this.setState(oldState => {\r\n//             oldState.levels = oldState.levels.filter(elem => elem.id !== cardId);\r\n//             setCookie('levels', JSON.stringify(oldState.levels));\r\n//             return {\r\n//                 levels: oldState.levels\r\n//             }\r\n//         })\r\n//     };\r\n//\r\n//     levelCreaterToggle = () => {\r\n//         this.setState(oldState => ({levelCreater: (!oldState.levelCreater)}));\r\n//     };\r\n//\r\n//     addLevel = (newLevel) => {\r\n//             this.setState(oldState=>{\r\n//                 newLevel.id = oldState.levels.length+1;\r\n//                 oldState.levels.push(newLevel);\r\n//                 setCookie('levels', JSON.stringify(oldState.levels));\r\n//                 return({levels: oldState.levels, levelCreater: false});\r\n//             });\r\n//     };\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div className={\"PageMain\"}>\r\n//                 <Header/>\r\n//                 <main>\r\n//                     <LevelsList\r\n//                         levels={this.state.levels}\r\n//                         startLevel={this.props.startLevel}\r\n//                         deleteCard={this.deleteCard}\r\n//                     />\r\n//                     <button\r\n//                         className='levels-list__add-btn hint--right'\r\n//                         aria-label='Создать новый тест'\r\n//                         onClick={this.levelCreaterToggle}\r\n//                     >\r\n//                         <i className=\"far fa-plus-square\"></i>\r\n//                     </button>\r\n//                 </main>\r\n//                 {(this.state.levelCreater)?<LevelCreater levelCreaterToggle={this.levelCreaterToggle} addLevel={this.addLevel} />:''}\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nPageMain.propTypes = {\r\n    startLevel: PropTypes.func\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\n\r\nexport default class LevelHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            exp: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const score = this.props.score;\r\n\r\n        return (\r\n            <header className=\"header-level\">\r\n                <h1>{this.props.levelName}</h1>\r\n                <h1 className={\"header__score\"}>{`Score: ${score}`}</h1>\r\n                <div className=\"score-bar\"><div className=\"score-bar__fill\" style={{\"width\":`${score * 10}%`}}></div></div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nLevelHeader.propTypes = {\r\n    score: PropTypes.number\r\n};","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./style.css\";\r\nimport { Transition ,TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nexport default class RoundWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            result: \"await\", //--[true/false/await]--//\r\n            buttonActive: false,\r\n            exitMode: \"RoundWindow\",\r\n            show: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({show:true});\r\n    }\r\n\r\n    roundClear = () => {\r\n        this.setState({\r\n            buttonActive: false\r\n        });\r\n        document.getElementsByClassName(\"RoundWindow__input\")[0]\r\n            .value = '';\r\n    };\r\n\r\n    checkAnswer = (e) => {\r\n        e.preventDefault();\r\n        let answer = this.getAnswer().value.replace(/\\s{2,}/g, ' ').trim().toLowerCase();\r\n\r\n        if (this.props.answer.find( (el) => (el === answer) )) {\r\n            this.props.changeScore(1);\r\n            this.setState({exitMode:\"right-answer\", show:false});\r\n\r\n        } else {\r\n            this.props.changeScore(-1);\r\n            this.setState({exitMode:\"fail-answer\", show:false});\r\n\r\n        }\r\n\r\n        this.setState({show:false});\r\n    };\r\n\r\n    getAnswer = () => {\r\n        return document.getElementsByClassName(\"RoundWindow__input\")[0];\r\n    };\r\n\r\n    buttonActive = () => {\r\n        if (this.getAnswer().value){\r\n            this.setState({\r\n                buttonActive: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                buttonActive: false\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props.answer);\r\n\r\n        const text = this.props.text;\r\n        const buttonText = (this.state.buttonActive)? \"Проверить\": \"Пропустить\";\r\n        const buttonClassName = (this.state.buttonActive)?\r\n            \"RoundWindow__button RoundWindow__button_action\":\r\n            \"RoundWindow__button\";\r\n\r\n        return (\r\n            <Transition\r\n                in={this.state.show}\r\n                timeout={0}\r\n                // unmountOnExit={true}\r\n                onExited={\r\n                    () => {\r\n                        this.roundClear();\r\n                        setTimeout(()=>{\r\n                            this.setState({exitMode:\"RoundWindow\", show:true})\r\n                            this.props.goNextRound(this.props.roundId);\r\n                        },500);\r\n                    }\r\n                }\r\n            >\r\n\r\n                {(state) => {\r\n                    const animationClassName = `${this.state.exitMode}-${state}`;\r\n\r\n                    return (\r\n                            <div className={`RoundWindow ${animationClassName}`}>\r\n                                <p className={\"RoundWindow__text\"} >{text}</p>\r\n                                <form action=\"#\" onSubmit={this.checkAnswer}>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={\"RoundWindow__input\"}\r\n                                        onChange={this.buttonActive}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value={buttonText}\r\n                                        className={buttonClassName}\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        )\r\n                }}\r\n\r\n            </Transition>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nRoundWindow.propTypes = {\r\n    text: PropTypes.string,\r\n    answer: PropTypes.array,\r\n    roundId: PropTypes.number,\r\n    goNextRound: PropTypes.func,\r\n    changeScore: PropTypes.func\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\nimport LevelHeader from \"../../LevelHeader\";\r\nimport RoundWindow from \"../../RoundWindow\";\r\nimport { randomInteger }  from \"../../../funcs\";\r\n\r\nexport default class PageLevel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            roundSelected: 1,\r\n            roundsCompleted: [],\r\n            score: 0\r\n        }\r\n    }\r\n\r\n    goNextRound = (selectedNow) => {\r\n        if (this.state.roundsCompleted.length === this.props.rounds.length-2) {\r\n            this.setState({roundsCompleted: []});\r\n        }\r\n\r\n        let nextRoundId = randomInteger(1, this.props.rounds.length);\r\n        while(this.state.roundsCompleted.indexOf(nextRoundId) !== -1 || nextRoundId === selectedNow){\r\n            nextRoundId = randomInteger(1, this.props.rounds.length)\r\n        }\r\n\r\n        this.setState((oldState)=>{\r\n            return {\r\n                roundSelected: nextRoundId,\r\n                roundsCompleted: oldState.roundsCompleted.concat(selectedNow)\r\n            }\r\n        });\r\n        console.log(this.state.roundsCompleted);\r\n    };\r\n\r\n    changeScore = (changes) => {\r\n        if (changes < 0){\r\n            if (this.state.score === 0) {\r\n                return\r\n            }\r\n        } else if (this.state.score >= 9) {\r\n            setTimeout(this.exitLevel, 1000);\r\n\r\n        }\r\n\r\n        this.setState((state) => {\r\n            return{score: state.score + changes}\r\n        });\r\n    };\r\n\r\n    exitLevel = () => {\r\n        this.props.endLevel();\r\n    };\r\n\r\n    render() {\r\n        const score = this.state.score;\r\n        let round = this.props.rounds.find((round) => (\r\n            round.id === this.state.roundSelected)\r\n        );\r\n        const roundText = round.text;\r\n        const roundAnswer = round.answer;\r\n        const roundId = round.id;\r\n\r\n\r\n\r\n        return (\r\n            <div className={\"PageLevel\"}>\r\n                <LevelHeader levelName={this.props.name} score={score}/>\r\n\r\n                <RoundWindow\r\n                    text={roundText}\r\n                    answer={roundAnswer}\r\n                    roundId={roundId}\r\n                    goNextRound={this.goNextRound}\r\n                    changeScore={this.changeScore}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPageLevel.propTypes = {\r\n    name: PropTypes.string,\r\n    rounds: PropTypes.array,\r\n    goPage: PropTypes.func\r\n};","import React, {Component} from 'react';\r\n\r\nimport './style.css';\r\nimport './../../hint.css';\r\n\r\nimport PageMain from \"../Pages/PageMain\";\r\nimport PageLevel from \"../Pages/PageLevel\";\r\n\r\nimport { setCookie, getCookie } from '../../funcs';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedPage: <PageMain startLevel={this.startLevel} />\r\n        };\r\n\r\n        this.pageMain = <PageMain startLevel={this.startLevel} />\r\n    }\r\n\r\n    endLevel = () => {\r\n        this.goPage(this.pageMain)\r\n    };\r\n\r\n    startLevel = (levelData) => {\r\n        const newPage = <PageLevel\r\n            name={levelData.name}\r\n            rounds={levelData.rounds}\r\n            goPage={this.goPage}\r\n            endLevel={this.endLevel}\r\n        />;\r\n\r\n        this.goPage(newPage);\r\n    };\r\n\r\n\r\n\r\n    goPage = (page) => {\r\n        this.setState({selectedPage: page});\r\n    };\r\n\r\n    render() {\r\n        return this.state.selectedPage\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}