{"version":3,"sources":["Components/LevelCreater/RoundCreater/index.jsx","Components/LevelCreater/index.jsx","defaultLevels.js","Components/Header/index.jsx","Components/LevelCard/index.jsx","Components/LevelsList/index.jsx","funcs.js","Components/Pages/PageMain/index.jsx","Components/LevelHeader/index.jsx","Components/RoundWindow/index.jsx","Components/Pages/PageLevel/index.jsx","Components/App/index.jsx","index.js"],"names":["RoundCreater","props","questionHref","React","createRef","answerHrefs","react_default","a","createElement","className","type","placeholder","value","question","onChange","changeQuestion","roundId","current","ref","answer","map","id","push","key","concat","answerId","text","toLowerCase","changeAnswer","onClick","e","preventDefault","addAnswer","LevelCreater","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addRound","setState","oldState","rounds","length","round","changeTitle","title","titleRef","changeDescription","description","descriptionRef","rId","newRounds","slice","ans","ansId","create","state","alert","newLevel","name","addLevel","_this2","levelCreaterToggle","action","Component","defaultLevels","Header","LevelCard","deleteSelf","deleteCard","startLevel","target","LevelsList","levels","elem","LevelCard_LevelCard","randomInteger","min","max","rand","Math","random","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","date","Date","setDate","getDate","toUTCString","PageMain","cardId","filter","JSON","stringify","levelCreater","console","log","parse","Header_Header","aria-label","LevelCreater_LevelCreater","LevelHeader","exp","score","levelName","style","width","RoundWindow","roundClear","buttonActive","getElementsByClassName","checkAnswer","getAnswer","trim","find","el","changeScore","exitMode","show","result","buttonText","buttonClassName","Transition","in","timeout","onExited","setTimeout","goNextRound","animationClassName","onSubmit","PageLevel","selectedNow","roundsCompleted","nextRoundId","indexOf","roundSelected","changes","exitLevel","endLevel","roundText","roundAnswer","LevelHeader_LevelHeader","RoundWindow_RoundWindow","App","goPage","pageMain","levelData","newPage","PageLevel_PageLevel","page","selectedPage","PageMain_PageMain","ReactDOM","render","App_App","getElementById"],"mappings":"ucAIe,SAASA,EAAaC,GACjC,IAAIC,EAAeC,IAAMC,YACrBC,EAAc,GAelB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,sBACVC,KAAK,OACLC,YAAY,uCACZC,MAAOX,EAAMY,SACbC,SAfZ,WACIb,EAAMc,eAAed,EAAMe,QAASd,EAAae,QAAQL,QAejDM,IAAKhB,IAGLD,EAAMkB,OAAOC,IAAI,SAACD,EAAOE,GAErB,OADAhB,EAAYiB,KAAKnB,IAAMC,aAEfE,EAAAC,EAAAC,cAAA,SACIC,UAAU,sBACVc,IAAG,GAAAC,OAAKvB,EAAMe,QAAX,KAAAQ,OAAsBH,GACzBX,KAAK,OACLC,YAAW,wCAAAa,OAAYH,EAAG,GAC1BT,MAAOO,EACPL,SAAU,kBAzBtC,SAAsBW,GAClB,IAAMC,EAAOrB,EAAYoB,GAAUR,QAAQL,MAAMe,cACjD1B,EAAM2B,aAAa3B,EAAMe,QAASS,EAAUC,GAuBNE,CAAaP,IAC3BH,IAAKb,EAAYgB,OAKrCf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAwBoB,QAvClD,SAAmBC,GACfA,EAAEC,iBACF9B,EAAM+B,UAAU/B,EAAMe,WAqC4CV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCCxClEwB,cACjB,SAAAA,EAAYhC,GAAO,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMpC,KAkBVwC,SAAW,SAACX,GACRA,EAAEC,iBACFG,EAAKQ,SAAS,SAAAC,GACV,MAAO,CACHC,OAAQD,EAASC,OAAOpB,OAAO,CAAC,CAC5BH,GAAIsB,EAASC,OAAOC,OAAO,EAC3BnB,KAAM,GACNP,OAAQ,CAAC,WA1BNe,EAgCnBF,UAAY,SAAChB,GACTkB,EAAKQ,SAAS,SAAAC,GACV,MAAO,CACHC,OAAQD,EAASC,OAAOxB,IAAI,SAAC0B,EAAMzB,GAI/B,OAHIA,IAAOL,GACP8B,EAAM3B,OAAOG,KAAK,IAEfwB,QAvCJZ,EA6CnBa,YAAc,WACVb,EAAKQ,SAAS,CACVM,MAAOd,EAAKe,SAAShC,QAAQL,SA/ClBsB,EAkDnBgB,kBAAoB,WAChBhB,EAAKQ,SAAS,CACVS,YAAajB,EAAKkB,eAAenC,QAAQL,SApD9BsB,EAwDnBnB,eAAiB,SAACC,EAASU,GACvBQ,EAAKQ,SAAS,SAAAC,GACV,MAAO,CACHC,OAAQD,EAASC,OAAOxB,IAAI,SAAC0B,EAAMO,GAI/B,OAHIA,IAAQrC,IACR8B,EAAMpB,KAAOA,GAEVoB,QA/DJZ,EAqEnBN,aAAe,SAACZ,EAASS,EAAUC,GAC/BQ,EAAKQ,SAAS,SAAAC,GACV,IAAIW,EAAYX,EAASC,OAAOW,QAehC,MAAO,CACHX,QAdJU,EAAYA,EAAUlC,IAAI,SAAC0B,EAAMO,GAU7B,OATIA,IAAQrC,IACR8B,EAAM3B,OAAS2B,EAAM3B,OAAOC,IAAI,SAACoC,EAAKC,GAClC,OAAIA,IAAUhC,EACHC,EAEA8B,KAIZV,KAIWS,YAvFXrB,EA4FnBwB,OAAS,SAAC5B,GAEN,GADAA,EAAEC,iBACEG,EAAKyB,MAAMf,OAAOC,QAAU,EAC5B,OAAOe,MAAM,sNACjB,IAAIC,EAAW,CACXxC,GAAI,OACJyC,KAAM5B,EAAKyB,MAAMX,OAAS,UAC1BG,YAAajB,EAAKyB,MAAMR,YACxBP,OAAQV,EAAKyB,MAAMf,QAEvBV,EAAKjC,MAAM8D,SAASF,IAnGpB3B,EAAKyB,MAAQ,CACTX,MAAM,GACNG,YAAY,GACZP,OAAQ,CACJ,CACIvB,GAAI,EACJK,KAAM,GACNP,OAAQ,CAAC,OAKrBe,EAAKe,SAAW9C,IAAMC,YACtB8B,EAAKkB,eAAiBjD,IAAMC,YAhBb8B,wEAyGV,IAAA8B,EAAA3B,KACL,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQqB,QAASQ,KAAKpC,MAAMgE,mBAAoBxD,UAAU,2BAA2BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAClGH,EAAAC,EAAAC,cAAA,QAAM0D,OAAO,IAAIzD,UAAU,eACvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,qBACVS,IAAKmB,KAAKY,SACVvC,KAAK,OACLE,MAAOyB,KAAKsB,MAAMX,MAClBrC,YAAY,mDACZG,SAAUuB,KAAKU,cAEnBzC,EAAAC,EAAAC,cAAA,SACIC,UAAU,2BACVS,IAAKmB,KAAKe,eACV1C,KAAK,OACLE,MAAOyB,KAAKsB,MAAMR,YAClBxC,YAAY,mDACZG,SAAUuB,KAAKa,qBAKnBb,KAAKsB,MAAMf,OAAOxB,IAAI,SAAC0B,EAAMzB,GAAP,OACdf,EAAAC,EAAAC,cAACR,EAAD,CACIuB,IAAKF,EACLL,QAASK,EACTR,SAAUiC,EAAMpB,KAChBP,OAAQ2B,EAAM3B,OACda,UAAWgC,EAAKhC,UAChBjB,eAAgBiD,EAAKjD,eACrBa,aAAcoC,EAAKpC,kBAKvCtB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oDAAoDoB,QAASQ,KAAKI,UAAUnC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAC3GH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BoB,QAASQ,KAAKqB,QAA/D,sDAjJ0BS,aCwD3BC,SA/DO,CAClB,CACI/C,GAAI,EACJyC,KAAM,SACNX,YAAa,wHACbP,OAAQ,CACJ,CACIvB,GAAI,EACJK,KAAM,QACNP,OAAQ,CAAC,uCAAU,yCAEvB,CACIE,GAAI,EACJK,KAAM,QACNP,OAAQ,CAAC,mCAEb,CACIE,GAAI,EACJK,KAAM,QACNP,OAAQ,CAAC,+CAEb,CACIE,GAAI,EACJK,KAAM,OACNP,OAAQ,CAAC,+CAEb,CACIE,GAAI,EACJK,KAAM,SACNP,OAAQ,CAAC,yCAEb,CACIE,GAAI,EACJK,KAAM,QACNP,OAAQ,CAAC,mEAIrB,CACIE,GAAI,EACJyC,KAAM,UACNX,YAAa,oIACbP,OAAQ,CACJ,CACIvB,GAAI,EACJK,KAAM,MACNP,OAAQ,CAAC,qBAAO,mCAEpB,CACIE,GAAI,EACJK,KAAM,UACNP,OAAQ,CAAC,yCAEb,CACIE,GAAI,EACJK,KAAM,OACNP,OAAQ,CAAC,iCCpDJkD,0LAEb,OACI/D,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAW,YAAYH,EAAAC,EAAAC,cAAA,qBAA3B,sBAJoB2D,cCCfG,2BACjB,SAAAA,EAAYrE,GAAO,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACfpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMpC,KAGVsE,WAAa,WACTrC,EAAKjC,MAAMuE,WAAWtC,EAAKjC,MAAMoB,KALlBa,EAQnBuC,WAAa,SAAC3C,GACV,GAA0B,qBAAvBA,EAAE4C,OAAOjE,UACR,OAAOyB,EAAKqC,aAEhBrC,EAAKjC,MAAMwE,WAAW,CAClBX,KAAM5B,EAAKjC,MAAM6D,KACjBlB,OAAQV,EAAKjC,MAAM2C,UAdRV,wEAmBf,OACI5B,EAAAC,EAAAC,cAAA,MAAIC,UAAW,YAAaoB,QAASQ,KAAKoC,YACtCnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAEjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAW,mBAAoB4B,KAAKpC,MAAM6D,MAC9CxD,EAAAC,EAAAC,cAAA,KAAGC,UAAW,0BAA2B4B,KAAKpC,MAAMkD,aACpD7C,EAAAC,EAAAC,cAAA,KACIC,UAAW,+BACXoB,QAASQ,KAAKkC,qBA7BKJ,cCExB,SAASQ,EAAY1E,GAahC,OACIK,EAAAC,EAAAC,cAAA,MAAIC,UAAW,cACMR,EAAM2E,OAdKxD,IAAI,SAAAyD,GAAI,OAChCvE,EAAAC,EAAAC,cAACsE,EAAD,CACIvD,IAAKsD,EAAKxD,GACVA,GAAIwD,EAAKxD,GACTyC,KAAMe,EAAKf,KACXX,YAAa0B,EAAK1B,YAClBP,OAAQiC,EAAKjC,OACb6B,WAAYxE,EAAMwE,WAClBD,WAAYvE,EAAMuE,gBChBtC,SAASO,EAAcC,EAAKC,GACxB,IAAIC,EAAOF,EAAM,GAAMG,KAAKC,UAAYH,EAAMD,EAAM,GAEpD,OADAE,EAAOC,KAAKrC,MAAMoC,GAMtB,SAASG,EAAUvB,GACf,IAAIwB,EAAUC,SAASC,OAAOC,MAAM,IAAIC,OACpC,WAAa5B,EAAK6B,QAAQ,+BAAgC,QAAU,aAExE,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,EAGtD,SAASC,EAAUN,EAAQ5E,GACvB,IAAImF,EAAO,IAAIC,KACfD,EAAKE,QAAQF,EAAKG,UAAY,KAC9BH,EAAOA,EAAKI,cACZZ,SAASC,OAAT,GAAAhE,OAAqBgE,EAArB,KAAAhE,OAA+BZ,EAA/B,oBAAAY,OAAuDuE,OCNtCK,cACjB,SAAAA,EAAYnG,GAAM,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACdlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMpC,KAcVuE,WAAa,SAAC6B,GACVnE,EAAKQ,SAAS,SAAAC,GAGV,OAFAA,EAASiC,OAASjC,EAASiC,OAAO0B,OAAO,SAAAzB,GAAI,OAAIA,EAAKxD,KAAOgF,IAC7DP,EAAU,SAAUS,KAAKC,UAAU7D,EAASiC,SACrC,CACHA,OAAQjC,EAASiC,WApBX1C,EAyBlB+B,mBAAqB,WACjB/B,EAAKQ,SAAS,SAAAC,GAAQ,MAAK,CAAC8D,cAAgB9D,EAAS8D,iBA1BvCvE,EA6BlB6B,SAAW,SAACF,GACJ3B,EAAKQ,SAAS,SAAAC,GAIV,OAHAkB,EAASxC,GAAKsB,EAASiC,OAAO/B,OAAO,EACrCF,EAASiC,OAAOtD,KAAKuC,GACrBiC,EAAU,SAAUS,KAAKC,UAAU7D,EAASiC,SACrC,CAACA,OAAQjC,EAASiC,OAAQ6B,cAAc,MA/BlDpB,EAAU,YACXqB,QAAQC,IAAI,2SACZb,EAAU,SAAUS,KAAKC,UAAUpC,KAGvClC,EAAKyB,MAAQ,CACTiB,OAAQ2B,KAAKK,MAAMvB,EAAU,WAC7BoB,cAAc,GAVJvE,wEAuCd,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YACZH,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACmE,EAAD,CACIC,OAAQvC,KAAKsB,MAAMiB,OACnBH,WAAYpC,KAAKpC,MAAMwE,WACvBD,WAAYnC,KAAKmC,aAErBlE,EAAAC,EAAAC,cAAA,UACIC,UAAU,mCACVqG,aAAW,qGACXjF,QAASQ,KAAK4B,oBAEd3D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAGnB4B,KAAKsB,MAAM8C,aAAcnG,EAAAC,EAAAC,cAACuG,EAAD,CAAc9C,mBAAoB5B,KAAK4B,mBAAoBF,SAAU1B,KAAK0B,WAAa,WAzD5FI,aCRjB6C,2BACjB,SAAAA,EAAY/G,GAAO,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2E,IACf9E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6E,GAAAxE,KAAAH,KAAMpC,KAED0D,MAAQ,CACTsD,IAAK,GAJM/E,wEASf,IAAMgF,EAAQ7E,KAAKpC,MAAMiH,MAEzB,OACI5G,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,UAAK6B,KAAKpC,MAAMkH,WAChB7G,EAAAC,EAAAC,cAAA,MAAIC,UAAW,iBAAf,UAAAe,OAA2C0F,IAC3C5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB2G,MAAO,CAACC,MAAA,GAAA7F,OAAmB,GAAR0F,EAAX,iBAhB3C/C,8BCCpBmD,cACjB,SAAAA,EAAYrH,GAAO,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACfpF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMpC,KAcVsH,WAAa,WACTrF,EAAKQ,SAAS,CACV8E,cAAc,IAElBjC,SAASkC,uBAAuB,sBAAsB,GACjD7G,MAAQ,IApBEsB,EAuBnBwF,YAAc,SAAC5F,GACXA,EAAEC,iBACF,IAAIZ,EAASe,EAAKyF,YAAY/G,MAAM+E,QAAQ,UAAW,KAAKiC,OAAOjG,cAE/DO,EAAKjC,MAAMkB,OAAO0G,KAAM,SAACC,GAAD,OAASA,IAAO3G,KACxCe,EAAKjC,MAAM8H,YAAY,GACvB7F,EAAKQ,SAAS,CAACsF,SAAS,eAAgBC,MAAK,MAG7C/F,EAAKjC,MAAM8H,aAAa,GACxB7F,EAAKQ,SAAS,CAACsF,SAAS,cAAeC,MAAK,KAIhD/F,EAAKQ,SAAS,CAACuF,MAAK,KArCL/F,EAwCnByF,UAAY,WACR,OAAOpC,SAASkC,uBAAuB,sBAAsB,IAzC9CvF,EA4CnBsF,aAAe,WACPtF,EAAKyF,YAAY/G,MACjBsB,EAAKQ,SAAS,CACV8E,cAAc,IAGlBtF,EAAKQ,SAAS,CACV8E,cAAc,KAhDtBtF,EAAKyB,MAAQ,CACTuE,OAAQ,QACRV,cAAc,EACdQ,SAAU,cACVC,MAAM,GAPK/F,mFAYfG,KAAKK,SAAS,CAACuF,MAAK,qCA4Cf,IAAAjE,EAAA3B,KACLqE,QAAQC,IAAItE,KAAKpC,MAAMkB,QAEvB,IAAMO,EAAOW,KAAKpC,MAAMyB,KAClByG,EAAc9F,KAAKsB,MAAM6D,aAAe,yDAAa,+DACrDY,EAAmB/F,KAAKsB,MAAM6D,aAChC,iDACA,sBAEJ,OACIlH,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACIC,GAAIjG,KAAKsB,MAAMsE,KACfM,QAAS,EAETC,SACI,WACIxE,EAAKuD,aACLkB,WAAW,WACPzE,EAAKtB,SAAS,CAACsF,SAAS,cAAeC,MAAK,IAC5CjE,EAAK/D,MAAMyI,YAAY1E,EAAK/D,MAAMe,UACpC,OAKT,SAAC2C,GACE,IAAMgF,EAAkB,GAAAnH,OAAMwC,EAAKL,MAAMqE,SAAjB,KAAAxG,OAA6BmC,GAErD,OACQrD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAe,OAAiBmH,IAC3BrI,EAAAC,EAAAC,cAAA,KAAGC,UAAW,qBAAuBiB,GACrCpB,EAAAC,EAAAC,cAAA,QAAM0D,OAAO,IAAI0E,SAAU5E,EAAK0D,aAC5BpH,EAAAC,EAAAC,cAAA,SACIE,KAAK,OACLD,UAAW,qBACXK,SAAUkD,EAAKwD,eAEnBlH,EAAAC,EAAAC,cAAA,SACIE,KAAK,SACLE,MAAOuH,EACP1H,UAAW2H,eAjGVjE,aCEpB0E,cACjB,SAAAA,EAAY5I,GAAO,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwG,IACf3G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0G,GAAArG,KAAAH,KAAMpC,KASVyI,YAAc,SAACI,GACP5G,EAAKyB,MAAMoF,gBAAgBlG,SAAWX,EAAKjC,MAAM2C,OAAOC,OAAO,GAC/DX,EAAKQ,SAAS,CAACqG,gBAAiB,KAIpC,IADA,IAAIC,EAAcjE,EAAc,EAAG7C,EAAKjC,MAAM2C,OAAOC,SACM,IAArDX,EAAKyB,MAAMoF,gBAAgBE,QAAQD,IAAuBA,IAAgBF,GAC5EE,EAAcjE,EAAc,EAAG7C,EAAKjC,MAAM2C,OAAOC,QAGrDX,EAAKQ,SAAS,SAACC,GACX,MAAO,CACHuG,cAAeF,EACfD,gBAAiBpG,EAASoG,gBAAgBvH,OAAOsH,MAGzDpC,QAAQC,IAAIzE,EAAKyB,MAAMoF,kBA1BR7G,EA6BnB6F,YAAc,SAACoB,GACX,GAAIA,EAAU,GACV,GAAyB,IAArBjH,EAAKyB,MAAMuD,MACX,YAEGhF,EAAKyB,MAAMuD,OAAS,GAC3BuB,WAAWvG,EAAKkH,UAAW,KAI/BlH,EAAKQ,SAAS,SAACiB,GACX,MAAM,CAACuD,MAAOvD,EAAMuD,MAAQiC,MAxCjBjH,EA4CnBkH,UAAY,WACRlH,EAAKjC,MAAMoJ,YA1CXnH,EAAKyB,MAAQ,CACTuF,cAAe,EACfH,gBAAiB,GACjB7B,MAAO,GANIhF,wEAgDV,IAAA8B,EAAA3B,KACC6E,EAAQ7E,KAAKsB,MAAMuD,MACrBpE,EAAQT,KAAKpC,MAAM2C,OAAOiF,KAAK,SAAC/E,GAAD,OAC/BA,EAAMzB,KAAO2C,EAAKL,MAAMuF,gBAEtBI,EAAYxG,EAAMpB,KAClB6H,EAAczG,EAAM3B,OACpBH,EAAU8B,EAAMzB,GAItB,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACZH,EAAAC,EAAAC,cAACgJ,EAAD,CAAarC,UAAW9E,KAAKpC,MAAM6D,KAAMoD,MAAOA,IAEhD5G,EAAAC,EAAAC,cAACiJ,EAAD,CACI/H,KAAM4H,EACNnI,OAAQoI,EACRvI,QAASA,EACT0H,YAAarG,KAAKqG,YAClBX,YAAa1F,KAAK0F,sBArEC5D,aCElBuF,cACjB,SAAAA,EAAYzJ,GAAO,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqH,IACfxH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuH,GAAAlH,KAAAH,KAAMpC,KASVoJ,SAAW,WACPnH,EAAKyH,OAAOzH,EAAK0H,WAXF1H,EAcnBuC,WAAa,SAACoF,GACV,IAAMC,EAAUxJ,EAAAC,EAAAC,cAACuJ,EAAD,CACZjG,KAAM+F,EAAU/F,KAChBlB,OAAQiH,EAAUjH,OAClB+G,OAAQzH,EAAKyH,OACbN,SAAUnH,EAAKmH,WAGnBnH,EAAKyH,OAAOG,IAtBG5H,EA2BnByH,OAAS,SAACK,GACN9H,EAAKQ,SAAS,CAACuH,aAAcD,KAzB7B9H,EAAKyB,MAAQ,CACTsG,aAAc3J,EAAAC,EAAAC,cAAC0J,EAAD,CAAUzF,WAAYvC,EAAKuC,cAG7CvC,EAAK0H,SAAWtJ,EAAAC,EAAAC,cAAC0J,EAAD,CAAUzF,WAAYvC,EAAKuC,aAP5BvC,wEAgCf,OAAOG,KAAKsB,MAAMsG,oBAjCO9F,aCLjCgG,IAASC,OAAO9J,EAAAC,EAAAC,cAAC6J,EAAD,MAAQ9E,SAAS+E,eAAe","file":"static/js/main.428a6bfa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default function RoundCreater(props) {\r\n    let questionHref = React.createRef();\r\n    let answerHrefs = [];\r\n\r\n    function addAnswer(e) {\r\n        e.preventDefault();\r\n        props.addAnswer(props.roundId);\r\n    }\r\n\r\n    function changeQuestion() {\r\n        props.changeQuestion(props.roundId, questionHref.current.value);\r\n    }\r\n    function changeAnswer(answerId) {\r\n        const text = answerHrefs[answerId].current.value.toLowerCase();\r\n        props.changeAnswer(props.roundId, answerId, text);\r\n    }\r\n\r\n    return(\r\n        <div className=\"create-round-wrapper\">\r\n            <input\r\n                className='create-round__input'\r\n                type=\"text\"\r\n                placeholder=\"Вопрос\"\r\n                value={props.question}\r\n                onChange={changeQuestion}\r\n                ref={questionHref}\r\n            />\r\n            {\r\n                props.answer.map((answer,id) => {\r\n                    answerHrefs.push(React.createRef());\r\n                    return(\r\n                            <input\r\n                                className='create-round__input'\r\n                                key={`${props.roundId}-${id}`}\r\n                                type=\"text\"\r\n                                placeholder={`Ответ №${id+1}`}\r\n                                value={answer}\r\n                                onChange={()=>changeAnswer(id)}\r\n                                ref={answerHrefs[id]}\r\n                            />\r\n                        )\r\n                })\r\n            }\r\n            <button className=\"create-round__add-btn\" onClick={addAnswer}><i className=\"far fa-plus-square\"></i></button>\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport RoundCreater from \"./RoundCreater\";\r\n\r\nimport './style.css';\r\n\r\nexport default class LevelCreater extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title:'',\r\n            description:'',\r\n            rounds: [\r\n                {\r\n                    id: 1,\r\n                    text: '',\r\n                    answer: ['']\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n    }\r\n\r\n    addRound = (e) => {\r\n        e.preventDefault();\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.concat([{\r\n                    id: oldState.rounds.length+1,\r\n                    text: '',\r\n                    answer: ['']\r\n                }])\r\n            }\r\n        })\r\n    };\r\n\r\n    addAnswer = (roundId) => {\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.map((round,id) => {\r\n                    if (id === roundId){\r\n                        round.answer.push('');\r\n                    }\r\n                    return round\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    changeTitle = () => {\r\n        this.setState({\r\n            title: this.titleRef.current.value\r\n        })\r\n    };\r\n    changeDescription = () => {\r\n        this.setState({\r\n            description: this.descriptionRef.current.value\r\n        })\r\n    };\r\n\r\n    changeQuestion = (roundId, text) => {\r\n        this.setState(oldState => {\r\n            return {\r\n                rounds: oldState.rounds.map((round,rId) => {\r\n                    if (rId === roundId) {\r\n                        round.text = text\r\n                    }\r\n                    return round;\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    changeAnswer = (roundId, answerId, text) => {\r\n        this.setState(oldState => {\r\n            let newRounds = oldState.rounds.slice();\r\n\r\n            newRounds = newRounds.map((round,rId) => {\r\n                if (rId === roundId) {\r\n                    round.answer = round.answer.map((ans, ansId) => {\r\n                        if (ansId === answerId) {\r\n                            return text;\r\n                        } else {\r\n                            return ans;\r\n                        }\r\n                    });\r\n                }\r\n                return round;\r\n            });\r\n\r\n            return {\r\n                rounds: newRounds.slice()\r\n            }\r\n        })\r\n    };\r\n\r\n    create = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.rounds.length <= 2)\r\n            return alert('В уровне должно быть больше двух раундов');\r\n        let newLevel = {\r\n            id: 'none',\r\n            name: this.state.title || 'MyLevel',\r\n            description: this.state.description,\r\n            rounds: this.state.rounds\r\n        };\r\n        this.props.addLevel(newLevel);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"create-window\">\r\n                <button onClick={this.props.levelCreaterToggle} className='level-creater__exit-btn' ><i className=\"far fa-times-circle\"></i></button>\r\n                <form action=\"#\" className=\"create-form\">\r\n                    <div className='level-create__head'>\r\n                        <input\r\n                            className='level-creat__title'\r\n                            ref={this.titleRef}\r\n                            type=\"text\"\r\n                            value={this.state.title}\r\n                            placeholder='Название'\r\n                            onChange={this.changeTitle}\r\n                        />\r\n                        <input\r\n                            className='level-creat__description'\r\n                            ref={this.descriptionRef}\r\n                            type=\"text\"\r\n                            value={this.state.description}\r\n                            placeholder='Описание'\r\n                            onChange={this.changeDescription}\r\n                        />\r\n\r\n                    </div>\r\n                    {\r\n                        this.state.rounds.map((round,id) => (\r\n                                <RoundCreater\r\n                                    key={id}\r\n                                    roundId={id}\r\n                                    question={round.text}\r\n                                    answer={round.answer}\r\n                                    addAnswer={this.addAnswer}\r\n                                    changeQuestion={this.changeQuestion}\r\n                                    changeAnswer={this.changeAnswer}\r\n                                />\r\n                        ))\r\n                    }\r\n                </form>\r\n                <button className=\"create-round__add-btn create-round__add-round-btn\" onClick={this.addRound}><i className=\"far fa-plus-square\"></i></button>\r\n                <button className=\"create-window__create-button\" onClick={this.create}>Создать</button>\r\n            </div>\r\n        )\r\n    }\r\n}","const defaultLevels = [\r\n    {\r\n        id: 1,\r\n        name: \"Colors\",\r\n        description: \"Демо уровень с цветами\",\r\n        rounds: [\r\n            {\r\n                id: 1,\r\n                text: 'black',\r\n                answer: ['черный', 'чёрный']\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'white',\r\n                answer: ['белый']\r\n            },\r\n            {\r\n                id: 3,\r\n                text: 'green',\r\n                answer: ['зеленый']\r\n            },\r\n            {\r\n                id: 4,\r\n                text: 'pink',\r\n                answer: ['розовый']\r\n            },\r\n            {\r\n                id: 5,\r\n                text: 'yellow',\r\n                answer: ['желтый']\r\n            },\r\n            {\r\n                id: 6,\r\n                text: 'brown',\r\n                answer: ['коричневый']\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Animals\",\r\n        description: \"Демо уровень с животными\",\r\n        rounds: [\r\n            {\r\n                id: 1,\r\n                text: 'Cat',\r\n                answer: ['кот', 'кошка']\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'chicken',\r\n                answer: ['курица']\r\n            },\r\n            {\r\n                id: 3,\r\n                text: 'crab',\r\n                answer: ['краб']\r\n            }\r\n        ]\r\n    }\r\n\r\n];\r\n\r\nexport default defaultLevels;","import React, {Component} from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1 className={\"logoMain\"}><span>local</span>EnLearning</h1>\r\n            </header>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\n\r\nexport default class LevelCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    deleteSelf = () => {\r\n        this.props.deleteCard(this.props.id)\r\n    };\r\n\r\n    startLevel = (e) => {\r\n        if(e.target.className === \"fas fa-trash-alt\"){\r\n            return this.deleteSelf();\r\n        }\r\n        this.props.startLevel({\r\n            name: this.props.name,\r\n            rounds: this.props.rounds\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className={\"LevelCard\"} onClick={this.startLevel}>\r\n                <div className='LevelCard__play'>\r\n                    <i className=\"fas fa-play\"></i>\r\n                </div>\r\n                <h2 className={\"LevelCard__name\"}>{this.props.name}</h2>\r\n                <p className={\"LevelCard__description\"}>{this.props.description}</p>\r\n                <i\r\n                    className={\"fas fa-trash-alt delete-icon\"}\r\n                    onClick={this.deleteSelf}\r\n                />\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nLevelCard.propTypes = {\r\n    name: PropTypes.string,\r\n    description: PropTypes.string,\r\n    rounds: PropTypes.array,\r\n    startLevel: PropTypes.func,\r\n    id: PropTypes.number,\r\n    deleteCard: PropTypes.func\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './style.css';\r\n\r\nimport LevelCard from \"../LevelCard\";\r\n\r\nexport default function LevelsList (props) {\r\n    const getListElements = arr => (arr.map(elem => (\r\n                <LevelCard\r\n                    key={elem.id}\r\n                    id={elem.id}\r\n                    name={elem.name}\r\n                    description={elem.description}\r\n                    rounds={elem.rounds}\r\n                    startLevel={props.startLevel}\r\n                    deleteCard={props.deleteCard}\r\n                />\r\n                )));\r\n\r\n    return (\r\n        <ul className={\"LevelsList\"}>\r\n            {getListElements(props.levels)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nLevelsList.propTypes = {\r\n    startLevel: PropTypes.func\r\n};","function randomInteger(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    rand = Math.round(rand);\r\n    return rand;\r\n}\r\n\r\n//-----cookies\r\n// возвращает cookie с именем name, если есть, если нет, то undefined\r\nfunction getCookie(name) {\r\n    var matches = document.cookie.match(new RegExp(\r\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nfunction setCookie(cookie, value) {\r\n    let date = new Date;\r\n    date.setDate(date.getDate() + 365);\r\n    date = date.toUTCString();\r\n    document.cookie = `${cookie}=${value};path=/;expires=${date}`;\r\n}\r\n\r\nfunction deleteCookie(cookie) {\r\n    let date = new Date(0).toUTCString();\r\n    document.cookie = `${cookie}=;path=/;expires=${date}`\r\n}\r\n\r\n\r\n//export default function setCookie(name, value)\r\n//export default function deleteCookie(name)\r\n\r\nexport { randomInteger, getCookie, setCookie, deleteCookie }","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LevelCreater from \"../../LevelCreater\";\r\n\r\nimport './style.css';\r\n\r\nimport defaultLevels from '../../../defaultLevels';\r\n\r\nimport Header from  \"../../Header\";\r\nimport LevelsList from \"../../LevelsList\";\r\n\r\nimport {getCookie, setCookie} from \"../../../funcs\";\r\n\r\nexport default class PageMain extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        if (!getCookie('levels')) {\r\n            console.log('Сохраненных уровней нет. Установка уровней по умолчанию');\r\n            setCookie('levels', JSON.stringify(defaultLevels));\r\n        }\r\n\r\n        this.state = {\r\n            levels: JSON.parse(getCookie('levels')),\r\n            levelCreater: false\r\n        };\r\n\r\n    }\r\n\r\n    deleteCard = (cardId) => {\r\n        this.setState(oldState => {\r\n            oldState.levels = oldState.levels.filter(elem => elem.id !== cardId);\r\n            setCookie('levels', JSON.stringify(oldState.levels));\r\n            return {\r\n                levels: oldState.levels\r\n            }\r\n        })\r\n    };\r\n\r\n    levelCreaterToggle = () => {\r\n        this.setState(oldState => ({levelCreater: (!oldState.levelCreater)}));\r\n    };\r\n\r\n    addLevel = (newLevel) => {\r\n            this.setState(oldState=>{\r\n                newLevel.id = oldState.levels.length+1;\r\n                oldState.levels.push(newLevel);\r\n                setCookie('levels', JSON.stringify(oldState.levels));\r\n                return({levels: oldState.levels, levelCreater: false});\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"PageMain\"}>\r\n                <Header/>\r\n                <main>\r\n                    <LevelsList\r\n                        levels={this.state.levels}\r\n                        startLevel={this.props.startLevel}\r\n                        deleteCard={this.deleteCard}\r\n                    />\r\n                    <button\r\n                        className='levels-list__add-btn hint--right'\r\n                        aria-label='Создать новый тест'\r\n                        onClick={this.levelCreaterToggle}\r\n                    >\r\n                        <i className=\"far fa-plus-square\"></i>\r\n                    </button>\r\n                </main>\r\n                {(this.state.levelCreater)?<LevelCreater levelCreaterToggle={this.levelCreaterToggle} addLevel={this.addLevel} />:''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPageMain.propTypes = {\r\n    startLevel: PropTypes.func\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\n\r\nexport default class LevelHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            exp: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const score = this.props.score;\r\n\r\n        return (\r\n            <header>\r\n                <h1>{this.props.levelName}</h1>\r\n                <h1 className={\"header__score\"}>{`Score: ${score}`}</h1>\r\n                <div className=\"score-bar\"><div className=\"score-bar__fill\" style={{\"width\":`${score * 10}%`}}></div></div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nLevelHeader.propTypes = {\r\n    score: PropTypes.number\r\n};","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./style.css\";\r\nimport { Transition ,TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nexport default class RoundWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            result: \"await\", //--[true/false/await]--//\r\n            buttonActive: false,\r\n            exitMode: \"RoundWindow\",\r\n            show: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({show:true});\r\n    }\r\n\r\n    roundClear = () => {\r\n        this.setState({\r\n            buttonActive: false\r\n        });\r\n        document.getElementsByClassName(\"RoundWindow__input\")[0]\r\n            .value = '';\r\n    };\r\n\r\n    checkAnswer = (e) => {\r\n        e.preventDefault();\r\n        let answer = this.getAnswer().value.replace(/\\s{2,}/g, ' ').trim().toLowerCase();\r\n\r\n        if (this.props.answer.find( (el) => (el === answer) )) {\r\n            this.props.changeScore(1);\r\n            this.setState({exitMode:\"right-answer\", show:false});\r\n\r\n        } else {\r\n            this.props.changeScore(-1);\r\n            this.setState({exitMode:\"fail-answer\", show:false});\r\n\r\n        }\r\n\r\n        this.setState({show:false});\r\n    };\r\n\r\n    getAnswer = () => {\r\n        return document.getElementsByClassName(\"RoundWindow__input\")[0];\r\n    };\r\n\r\n    buttonActive = () => {\r\n        if (this.getAnswer().value){\r\n            this.setState({\r\n                buttonActive: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                buttonActive: false\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props.answer);\r\n\r\n        const text = this.props.text;\r\n        const buttonText = (this.state.buttonActive)? \"Проверить\": \"Пропустить\";\r\n        const buttonClassName = (this.state.buttonActive)?\r\n            \"RoundWindow__button RoundWindow__button_action\":\r\n            \"RoundWindow__button\";\r\n\r\n        return (\r\n            <Transition\r\n                in={this.state.show}\r\n                timeout={0}\r\n                // unmountOnExit={true}\r\n                onExited={\r\n                    () => {\r\n                        this.roundClear();\r\n                        setTimeout(()=>{\r\n                            this.setState({exitMode:\"RoundWindow\", show:true})\r\n                            this.props.goNextRound(this.props.roundId);\r\n                        },500);\r\n                    }\r\n                }\r\n            >\r\n\r\n                {(state) => {\r\n                    const animationClassName = `${this.state.exitMode}-${state}`;\r\n\r\n                    return (\r\n                            <div className={`RoundWindow ${animationClassName}`}>\r\n                                <p className={\"RoundWindow__text\"} >{text}</p>\r\n                                <form action=\"#\" onSubmit={this.checkAnswer}>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={\"RoundWindow__input\"}\r\n                                        onChange={this.buttonActive}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value={buttonText}\r\n                                        className={buttonClassName}\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        )\r\n                }}\r\n\r\n            </Transition>\r\n\r\n        )\r\n    }\r\n};\r\n\r\nRoundWindow.propTypes = {\r\n    text: PropTypes.string,\r\n    answer: PropTypes.array,\r\n    roundId: PropTypes.number,\r\n    goNextRound: PropTypes.func,\r\n    changeScore: PropTypes.func\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\nimport LevelHeader from \"../../LevelHeader\";\r\nimport RoundWindow from \"../../RoundWindow\";\r\nimport { randomInteger }  from \"../../../funcs\";\r\n\r\nexport default class PageLevel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            roundSelected: 1,\r\n            roundsCompleted: [],\r\n            score: 0\r\n        }\r\n    }\r\n\r\n    goNextRound = (selectedNow) => {\r\n        if (this.state.roundsCompleted.length === this.props.rounds.length-2) {\r\n            this.setState({roundsCompleted: []});\r\n        }\r\n\r\n        let nextRoundId = randomInteger(1, this.props.rounds.length);\r\n        while(this.state.roundsCompleted.indexOf(nextRoundId) !== -1 || nextRoundId === selectedNow){\r\n            nextRoundId = randomInteger(1, this.props.rounds.length)\r\n        }\r\n\r\n        this.setState((oldState)=>{\r\n            return {\r\n                roundSelected: nextRoundId,\r\n                roundsCompleted: oldState.roundsCompleted.concat(selectedNow)\r\n            }\r\n        });\r\n        console.log(this.state.roundsCompleted);\r\n    };\r\n\r\n    changeScore = (changes) => {\r\n        if (changes < 0){\r\n            if (this.state.score === 0) {\r\n                return\r\n            }\r\n        } else if (this.state.score >= 9) {\r\n            setTimeout(this.exitLevel, 1000);\r\n\r\n        }\r\n\r\n        this.setState((state) => {\r\n            return{score: state.score + changes}\r\n        });\r\n    };\r\n\r\n    exitLevel = () => {\r\n        this.props.endLevel();\r\n    };\r\n\r\n    render() {\r\n        const score = this.state.score;\r\n        let round = this.props.rounds.find((round) => (\r\n            round.id === this.state.roundSelected)\r\n        );\r\n        const roundText = round.text;\r\n        const roundAnswer = round.answer;\r\n        const roundId = round.id;\r\n\r\n\r\n\r\n        return (\r\n            <div className={\"PageLevel\"}>\r\n                <LevelHeader levelName={this.props.name} score={score}/>\r\n\r\n                <RoundWindow\r\n                    text={roundText}\r\n                    answer={roundAnswer}\r\n                    roundId={roundId}\r\n                    goNextRound={this.goNextRound}\r\n                    changeScore={this.changeScore}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPageLevel.propTypes = {\r\n    name: PropTypes.string,\r\n    rounds: PropTypes.array,\r\n    goPage: PropTypes.func\r\n};","import React, {Component} from 'react';\r\n\r\nimport './style.css';\r\nimport './../../hint.css';\r\n\r\nimport PageMain from \"../Pages/PageMain\";\r\nimport PageLevel from \"../Pages/PageLevel\";\r\n\r\nimport { setCookie, getCookie } from '../../funcs';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedPage: <PageMain startLevel={this.startLevel} />\r\n        };\r\n\r\n        this.pageMain = <PageMain startLevel={this.startLevel} />\r\n    }\r\n\r\n    endLevel = () => {\r\n        this.goPage(this.pageMain)\r\n    };\r\n\r\n    startLevel = (levelData) => {\r\n        const newPage = <PageLevel\r\n            name={levelData.name}\r\n            rounds={levelData.rounds}\r\n            goPage={this.goPage}\r\n            endLevel={this.endLevel}\r\n        />;\r\n\r\n        this.goPage(newPage);\r\n    };\r\n\r\n\r\n\r\n    goPage = (page) => {\r\n        this.setState({selectedPage: page});\r\n    };\r\n\r\n    render() {\r\n        return this.state.selectedPage\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}