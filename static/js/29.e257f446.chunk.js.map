{"version":3,"sources":["app/views/utilities/Typography.jsx"],"names":["Typography","className","routeSegments","name","path","title","Array","keys","slice","reverse","map","item","index","key","ReactHtmlParser","description","ind","replace"],"mappings":"2QAuIeA,UA3HI,WAgDjB,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEC,cAAe,CACb,CAAEC,KAAM,YAAaC,KAAM,cAC3B,CAAED,KAAM,kBAKd,kBAAC,IAAD,CAAYE,MAAM,cAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUJ,UAAU,cAClB,kBAAC,IAAD,CAAWA,UAAU,QAArB,cACA,kBAAC,IAAD,CAAWA,UAAU,QAArB,QACA,kBAAC,IAAD,CAAWA,UAAU,QAArB,aAGJ,kBAAC,IAAD,KACG,YAAIK,MAAM,GAAGC,QACXC,MAAM,GACNC,UACAC,KAAI,SAACC,EAAMC,GAAP,OACH,kBAAC,IAAD,CAAUC,IAAKD,GACb,kBAAC,IAAD,CAAWX,UAAU,QAArB,IAA8BU,GAC9B,kBAAC,IAAD,CAAWV,UAAU,oBACrB,kBAAC,IAAD,CAAWA,UAAU,mBAClBa,IAAgB,KAAD,OAAMH,EAAN,aAAeA,EAAf,cAAyBA,EAAzB,WAIxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWV,UAAU,QAArB,cACA,kBAAC,IAAD,CAAWA,UAAU,mBAArB,aACA,kBAAC,IAAD,CAAWA,UAAU,mBACnB,0BAAMA,UAAU,cAAhB,gBAIH,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIS,KAAI,SAACC,EAAMC,GAAP,OACxC,kBAAC,IAAD,CAAUC,IAAKD,GACb,kBAAC,IAAD,CAAWX,UAAU,QAArB,QAAkCU,GAClC,kBAAC,IAAD,CAAWV,UAAU,mBAAmBU,EAAxC,MACA,kBAAC,IAAD,CAAWV,UAAU,mBAClBa,IAAgB,qBAAD,OACOH,EADP,kBACqBA,EADrB,mBAS1B,yBAAKV,UAAU,SAtGV,CACT,CACEA,UAAW,cACXc,YAAa,oBAEf,CACEd,UAAW,eACXc,YAAa,uBAEf,CACEd,UAAW,eACXc,YAAa,oBAEf,CACEd,UAAW,iBACXc,YAAa,oBAEf,CACEd,UAAW,aACXc,YAAa,oBAEf,CACEd,UAAW,cACXc,YAAa,qBAEf,CACEd,UAAW,aACXc,YAAa,oBAEf,CACEd,UAAW,aACXc,YAAa,oBAEf,CACEd,UAAW,kBACXc,YAAa,oBAEf,CACEd,UAAW,uBACXc,YAAa,yBAEf,CACEd,UAAW,sBACXc,YAAa,wBA4DLL,KAAI,SAACC,EAAMK,GAAP,OACR,yBACEH,IAAKG,EACLf,UAAU,+CAEV,8BAAOU,EAAKV,WACZ,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAWA,UAAU,QAArB,0BAAgDU,EAAKV,UAAUgB,QAC7D,IACA,IAFF,aAGMN,EAAKI,YAHX","file":"static/js/29.e257f446.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport {\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow\n} from \"@material-ui/core\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\nimport Highlight from \"react-highlight\";\n\nconst Typography = () => {\n  let list = [\n    {\n      className: \".font-light\",\n      description: \"font-weight: 300\"\n    },\n    {\n      className: \".font-normal\",\n      description: \"font-weight: normal\"\n    },\n    {\n      className: \".font-medium\",\n      description: \"font-weight: 500\"\n    },\n    {\n      className: \".font-semibold\",\n      description: \"font-weight: 600\"\n    },\n    {\n      className: \".font-bold\",\n      description: \"font-weight: 700\"\n    },\n    {\n      className: \".capitalize\",\n      description: \"Capitalize String\"\n    },\n    {\n      className: \".uppercase\",\n      description: \"UPPERCASE STRING\"\n    },\n    {\n      className: \".lowercase\",\n      description: \"lowercase string\"\n    },\n    {\n      className: \".whitespace-pre\",\n      description: \"white-space: pre\"\n    },\n    {\n      className: \".whitespace-pre-wrap\",\n      description: \"white-space: pre-wrap\"\n    },\n    {\n      className: \".whitespace-no-wrap\",\n      description: \"white-space: nowrap\"\n    }\n  ];\n\n  return (\n    <div className=\"m-sm-30\">\n      <div className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Utilities\", path: \"/utilities\" },\n            { name: \"Typography\" }\n          ]}\n        />\n      </div>\n\n      <SimpleCard title=\"typography\">\n        <Table>\n          <TableHead>\n            <TableRow className=\"bg-default\">\n              <TableCell className=\"px-0\">Class Name</TableCell>\n              <TableCell className=\"px-0\">Size</TableCell>\n              <TableCell className=\"px-0\">Example</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[...Array(7).keys()]\n              .slice(1)\n              .reverse()\n              .map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell className=\"px-0\">h{item}</TableCell>\n                  <TableCell className=\"px-0 capitalize\"></TableCell>\n                  <TableCell className=\"px-0 capitalize\">\n                    {ReactHtmlParser(`<h${item}>h${item}</h${item}>`)}\n                  </TableCell>\n                </TableRow>\n              ))}\n            <TableRow>\n              <TableCell className=\"px-0\">text-small</TableCell>\n              <TableCell className=\"px-0 capitalize\">0.8125rem</TableCell>\n              <TableCell className=\"px-0 capitalize\">\n                <span className=\"text-small\">text-small</span>\n              </TableCell>\n            </TableRow>\n\n            {[13, 14, 16, 18, 20, 22, 24, 30, 32].map((item, index) => (\n              <TableRow key={index}>\n                <TableCell className=\"px-0\">text-{item}</TableCell>\n                <TableCell className=\"px-0 capitalize\">{item}px</TableCell>\n                <TableCell className=\"px-0 capitalize\">\n                  {ReactHtmlParser(\n                    `<span class=\"text-${item}\">text-${item}</span>`\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className=\"py-2\"></div>\n        {list.map((item, ind) => (\n          <div\n            key={ind}\n            className=\"flex items-center flex-wrap justify-between\"\n          >\n            <code>{item.className}</code>\n            <div className=\"highlight-js\">\n              <Highlight className=\"html\">{`<div className=\"${item.className.replace(\n                \".\",\n                \"\"\n              )}\">${item.description}</div>`}</Highlight>\n            </div>\n          </div>\n        ))}\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default Typography;\n"],"sourceRoot":""}